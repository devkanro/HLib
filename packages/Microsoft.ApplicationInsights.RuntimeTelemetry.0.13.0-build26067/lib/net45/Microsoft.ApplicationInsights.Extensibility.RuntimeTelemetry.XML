<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry</name>
    </assembly>
    <members>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener">
            <summary>
            Provides methods for listening to events from FrameworkEventSource for SQL.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.FrameworkEventSourceName">
            <summary>
            The Framework EventSource name for SQL. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.BeginExecuteEventId">
            <summary>
            BeginExecute Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.EndExecuteEventId">
            <summary>
            EndExecute Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.sqlProcessingFramework">
            <summary>
            The SQL processor.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)">
            <summary>
            Enables SQL event source when EventSource is created.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called whenever an event has been written by an event source for which the event listener has enabled events.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.OnBeginExecute(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called when a postfix of a SQLCommand begin methods have been invoked.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.OnEndExecute(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called when a postfix of a postfix of a SQLCommand end methods have been invoked.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.SqlEventListener.EnableSqlEventSourceEvents(System.Diagnostics.Tracing.EventSource)">
            <summary>
            Helper method to enable events from SQL EventSource.
            </summary>
            <param name="eventSource">The event source name.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1">
            <summary>
            The implementation of cache provider for Windows Phone and Windows Store as MemoryCache is not available there.
            </summary>
            <typeparam name="TValue">Type of items to store in the cache.</typeparam>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.ICacheProvider`1">
            <summary>
            Represents an object cache and provides the base methods and properties for accessing the object cache.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.ICacheProvider`1.Contains(System.Int64)">
            <summary>
            Checks whether the cache entry already exists in the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <returns>true if the cache contains a cache entry with the same key value as key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.ICacheProvider`1.Get(System.Int64)">
            <summary>
            Gets the specified cache entry from the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <returns>A reference to the cache entry identified by key if the entry exists; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.ICacheProvider`1.Set(System.Int64,`0)">
            <summary>
            Inserts a cache entry into the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.ICacheProvider`1.Remove(System.Int64)">
            <summary>
            Removes the cache entry from the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <returns>True if the element is successfully found and removed; otherwise, false. This method returns false if key is not found.</returns>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.readerWriterLock">
            <summary>
            Reader-Writer Lock for thread safety.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.dictionary">
            <summary>
            Dictionary of cache items for fast Get and Contains operations.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.sortedList">
            <summary>
            Cache items sorted by the time of adding to cache. Required for to clear fast cache items when items are expired.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.maxSize">
            <summary>
            The maximum number of elements in the cache to avoid out of memory crashes.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.timer">
            <summary>
            Timer for clearing expired cache items on recurring bases.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.expirationMilliseconds">
            <summary>
            The duration in milliseconds after which item in the cache is expired.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
             Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1"/> class.
            </summary>
            <param name="expirationMilliseconds">Expiration timeout in milliseconds for an object to live in the cache.</param>
            <param name="maxSize">Maximum number of entries to cache (adjustable at runtime with MaxSize property).</param>
            <param name="synchronized">True to use a reader-writer lock to protect the data in the MemoryCacheList; false if the caller will handle synchronization.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Contains(System.Int64)">
            <summary>
            Checks whether the cache entry already exists in the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <returns>true if the cache contains a cache entry with the same key value as key; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Get(System.Int64)">
            <summary>
            Gets the specified cache entry from the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <returns>A reference to the cache entry identified by key if the entry exists; otherwise, null.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Set(System.Int64,`0)">
            <summary>
            Inserts a cache entry into the cache.
            </summary>
            <param name="key">A unique identifier for the cache entry.</param>
            <param name="value">The object to insert.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Remove(System.Int64)">
            <summary>
            Removes a specific key from the cache.
            </summary>
            <param name="key">Key to remove.</param>
            <returns>An object that represents the value of the removed cache entry that was specified by the key, or null if the specified entry was not found.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.ClearExpiredCacheItems(System.Object)">
            <summary>
            The timer callback that clears expired items in the cache.
            </summary>
            <param name="state">An object containing information to be used by the callback method, or null.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.Add(System.Int64,`0,System.Boolean)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">Key to add.</param>
            <param name="value">Value to associate with key.</param>
            <param name="overwrite">If true, will overwrite an existing key.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry">
            <summary>
            An entry in the MemoryCacheList.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry.#ctor(System.Int64,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry"/> class.
            </summary>
            <param name="key">The key of the element.</param>
            <param name="value">The value of the element.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry.Key">
            <summary>
            Gets the key of the element.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry.Value">
            <summary>
            Gets or sets the value of the element.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemoryCacheEntry.CreatedTicks">
            <summary>
            Gets number of ticks elapsed on the clock since the element was created.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemmoryCacheEntryTimeComparer">
            <summary>
            Exposes a method that compares two MemoryCacheEntry objects.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider`1.MemmoryCacheEntryTimeComparer.Compare(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider{`0}.MemoryCacheEntry,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.CacheProvider{`0}.MemoryCacheEntry)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>A signed integer that indicates the relative values of x and y, as shown in the following table.</returns>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.RddUtils.ErrorCodeForSuccess">
            <summary>
             The error code for success.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.RddUtils.endpointLeftPart">
            <summary>
            The left part of the endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.RddUtils.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.RddUtils"/> class.        
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.RddUtils.IsApplicationInsightsUrl(System.String)">
            <summary>
            Determines whether an URL is application insights URL.
            </summary>
            <param name="url">HTTP URL.</param>
            <returns>True if URL is application insights url, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch">
            <summary>
            Single high precision clock used by operations.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.Watch">
            <summary>
            High precision stopwatch.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.NanosecondsPerTick">
            <summary>
            Number of nanoseconds per high-precision clock tick.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.StartTime">
            <summary>
            The time clock started.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.DurationNanoseconds(System.Int64,System.Int64)">
            <summary>
            Calculates time between two clock readings in nanoseconds.
            </summary>
            <param name="fromTicks">Start time in ticks.</param>
            <param name="toTicks">End time in ticks.</param>
            <returns>Time between two clock readings in nanoseconds.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.Duration(System.Int64,System.Int64)">
            <summary>
            Calculates time between two clock readings.
            </summary>
            <param name="fromTicks">Start time in ticks.</param>
            <param name="toTicks">End time in ticks.</param>
            <returns>Time between two clock readings.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.Timestamp(System.Int64)">
            <summary>
            Converts time on the operation clock (in ticks) to date and time structure.
            </summary>
            <param name="elapsedTicks">Ticks elapsed according to operation watch.</param>
            <returns>Date time structure representing the date and time that corresponds to the operation clock reading.</returns>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.OperationWatch.ElapsedTicks">
            <summary>
            Gets number of ticks elapsed on the clock since the start.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1">
            <summary>
            Represents a collection of sorted elements that are accessible by index.
            </summary>
            <typeparam name="T">The type of element.</typeparam>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.list">
            <summary>
            Represents a collection of objects that can be individually accessed by index.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.comparer">
            <summary>
            Exposes a method that compares two objects.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.#ctor(System.Collections.Generic.IComparer{`0})">
            <summary>
            Initializes a new instance of the SortedList class that is empty.
            </summary>
            <param name="comparer">The IComparer implementation to use when comparing elements.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An IEnumerator object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.Add(`0)">
            <summary>
            Adds an element with the specified value to a SortedList object.
            </summary>
            <param name="item">Item to add.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index of a SortedList object.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.Remove(`0)">
            <summary>
            Removes the element with the specified value from a SortedList object.
            </summary>
            <param name="item">Item to remove.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.TryIndexOf(`0,System.Boolean@)">
            <summary>
            Determines the index of a specific item in the IList.
            </summary>
            <param name="item">The object to locate in the IList.</param>
            <param name="found">True if value is found in the list, otherwise false.</param>
            <returns>The index of value if found in the list; otherwise, the index of value where it needs to be inserted.</returns>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.Count">
            <summary>
            Gets the number of elements contained in a SortedList object.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Helpers.SortedList`1.Item(System.Int32)">
            <summary>
            Gets the element at a specified index in a sequence.
            </summary>
            <param name="index">The zero-based index of the element to get.</param>
            <returns>The element at the specified position in the source sequence.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener">
            <summary>
            Provides methods for listening to events from FrameworkEventSource for HTTP.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.FrameworkEventSourceName">
            <summary>
            The Framework EventSource name. 
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.BeginGetResponseEventId">
            <summary>
            BeginGetResponse Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.EndGetResponseEventId">
            <summary>
            EndGetResponse Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.BeginGetRequestStreamEventId">
            <summary>
            BeginGetRequestStream Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.EndGetRequestStreamEventId">
            <summary>
            EndGetRequestStream Event ID.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.httpProcessingFramework">
            <summary>
            The Http processor.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called whenever an event has been written by an event source for which the event listener has enabled events.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.OnBeginGetResponse(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called when a postfix of a (HttpWebRequest|FileWebRequest|FtpWebRequest).BeginGetResponse method has been invoked.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.OnEndGetResponse(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called when a postfix of a (HttpWebRequest|FileWebRequest|FtpWebRequest).EndGetResponse method has been invoked.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.EventListening.HttpEventListener.OnBeginGetRequestStream(System.Diagnostics.Tracing.EventWrittenEventArgs)">
            <summary>
            Called when a postfix of a (HttpWebRequest|FileWebRequest|FtpWebRequest).BeginGetRequestStream method has been invoked.
            </summary>
            <param name="eventData">The event arguments that describe the event.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy">
            <summary>
            This interfaces for implementing sampling policies.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy.ShouldSample">
            <summary>
            Check if operation should be sampled or not.
            </summary>
            <returns>True if should sample, otherwise false.</returns>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.SampleRateCount">
            <summary>
            This value indicates the minimum allowed interval between two samples.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.instanceLock">
            <summary>
            This value is used to synchronize the calls.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.count">
            <summary>
            This value indicates the number of samples that are skipped.
            This also represents the number of samples that we are sampling for.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy"/> class.
            </summary>
            <param name="sampleRateCount">The sample rate count.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.CountBasedSamplingPolicy.ShouldSample">
            <summary>
            Check if operation should be sampled or not.
            </summary>
            <returns>True if should sample, otherwise false.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.PolicyConfiguration">
            <summary>
            This class is a place holder for policy configuration.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.PolicyConfiguration.DefaultSampleRateCount">
            <summary>
            This value indicates the default sample rate count. Default to sample every call.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.PolicyConfiguration.ConvertRatioToRateCount(System.String)">
            <summary>
            Convert sample ratio to sample rate count.
            </summary>
            <param name="ratio">The ratio to be converted.</param>
            <returns>The sample rate count.</returns>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing">
            <summary>
            Abstract base class to encapsulate processing of http/SQL call backs from Profiler or Framework EventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.SamplingPolicy">
            <summary>
            The sampling policy.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.telemetryClient">
            <summary>
            The telemetryClient to use while sending RDD.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.count">
            <summary>
            This value indicates the count between two samples.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.#ctor(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.GetDependencyKind">
            <summary>
            Abstract method to determine the dependency Kind.
            </summary>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.GetRddSourceType">
            <summary>
            Abstract method to determine source of RDD information. Profiler based (APMC) or Framework Event source based.
            </summary>  
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.Begin(System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencySourceType})">
            <summary>
            Common method to mark the beginning of a Dependency Call operation.
            </summary>  
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.TryBegin(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation@,System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencySourceType})">
            <summary>
            Common method to mark the beginning of a Dependency Call operation.
            </summary>  
            <returns>True if should begin, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.End(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation,System.Boolean)">
            <summary>
            Common method to mark the end of a Dependency Call operation.
            <param name="operation">operation which is to be marked as completed</param>
            <param name="success">boolean flag indicating the call was success or not</param>
            <returns>DependencyCallOperation from which telemetry can be created</returns>
            </summary>  
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.TryEnd(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation@,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation,System.Boolean)">
            <summary>
            Common method to mark the end of a Dependency Call operation.
            </summary>
            <returns>True if should begin, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseProcessing.Send(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation)">
            <summary>
            Common method to serialize and send the DependencyCallOperation to DataCollection endpoint.
            Once TelemetryClient adds a new method TrackDependencyCallOperation(), this logic should be removed form here.
            <param name="dependencyCallOperation">DependencyCallOperation from which telemetry object need to be constructed and sent</param>
            </summary>  
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing">
            <summary>
            Abstract class to encapsulate any common processing to be done Framework EventSource processing.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.RddCallCache">
            <summary>
            Setting expiration timeout to 100 seconds as it is the default timeout on HttpWebRequest object.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.#ctor(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.GetRddSourceType">
            <summary>
            Gets RDD Source.
            </summary>        
            <returns>The RDD source.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.IsAsync">
            <summary>
            Returns if the dependency calls is made async.
            </summary>
            <returns>true if async, else false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.Begin(System.String,System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind})">
            <summary>
            Common method to mark the beginning of a Dependency Call operation in FrameworkEventSource.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.BaseFrameworkProcessing.TryCreateTelemetryAndSend(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation,System.Boolean)">
            <summary>
            Ends the dependency operation and sends telemetry.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.#ctor(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.OnBeginExecuteCallback(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.BeginExecuteItem)">
            <summary>
            On begin callback from FX.
            </summary>
            <param name="beginItem">Object encapsulating parameters passed from Framework callbacks for begin.</param>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.OnEndExecuteCallback(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.EndExecuteItem)">
            <summary>
            On end callback from FX.
            </summary>        
            <param name="endItem">Object encapsulating parameters passed from Framework callback for end.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.GetDependencyKind">
            <summary>
            Gets Dependency Kind for Resource.
            </summary>        
            <returns>The Dependency Kind.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.GetResourceName(System.String,System.String,System.String)">
            <summary>
            Gets SQL command resource name.
            </summary>
            <param name="dataSource">DataSource name.</param>
            <param name="database">Database name.</param>
            <param name="commandText">CommandText name.</param>        
            <returns>The resource name if possible otherwise empty string.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.OnBegin(System.Int64,System.String)">
            <summary>
            Common helper for all Begin Callbacks.
            </summary>
            <param name="id">This object.</param>
            <param name="resourceName">URI of the web request.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.SqlProcessingFramework.OnEnd(System.Int64,System.Boolean,System.Boolean)">
            <summary>
            Common helper for all End Callbacks.
            </summary>
            <param name="id">The id.</param>
            <param name="success">The success flag to indicate if the dependency call completed successfully or not.</param>
            <param name="synchronous">The synchronous flag to indicate if the dependency call was made synchronously or not.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.#ctor(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.OnBeginHttpCallback(System.Int64,System.String)">
            <summary>
            On begin callback from FX.
            </summary>
            <param name="id">This object.</param>
            <param name="uri">URI of the web request.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.OnEndHttpCallback(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            On end callback from FX.
            </summary>
            <param name="id">The id.</param>
            <param name="success">The success to indicate if the dependency call completed successfully or not.</param>
            <param name="synchronous">The synchronous flag to indicate if the dependency call was synchronous or not.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.GetDependencyKind">
            <summary>
            Gets Dependency Kind for Resource.
            </summary>        
            <returns>The Dependency Kind.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.OnBegin(System.Int64,System.String)">
            <summary>
            Common helper for all Begin Callbacks.
            </summary>
            <param name="id">This object.</param>
            <param name="resourceName">URI of the web request.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.FrameworkProcessing.HttpProcessingFramework.OnEnd(System.Int64,System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
            <summary>
            Common helper for all End Callbacks.
            </summary>
            <param name="id">The id.</param>
            <param name="success">The success to indicate if the dependency call completed successfully or not.</param>
            <param name="synchronous">The synchronous flag to indicate if the dependency call was synchronous or not.</param>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing">
            <summary>
            Abstract class to encapsulate common logic of processing http/SQL call backs from Profiler.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.weakTableForCorrelation">
            <summary>
            Conditional weak table for correlating begin / end operations.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.#ctor(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.GetResourceName(System.Object)">
            <summary>
            Abstract method to extract the resource name from the this object received from profiler call back.
            </summary>
            <param name="thisObj">Represents the this object passed by the profiler call back.</param>
            <returns>The resource name.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.GetRddSourceType">
            <summary>
            Returns the RDD Source for all Profiler based instrumentation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.Begin(System.String,System.Boolean,System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind})">
            <summary>
            Common method to mark the beginning of a Dependency Call operation in Profiler based instrumentation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.TryBegin(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation@,System.String,System.Boolean,System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind})">
            <summary>
            Common method to mark the beginning of a Dependency Call operation in Profiler based instrumentation.
            </summary>
            <returns>True if should begin, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.CreateTelemetryAndSend(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation,System.Object)">
            <summary>
            Common method that ends the dependency operation and sends telemetry.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.BaseProfilerProcessing.TryCreateTelemetryAndSend(Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation,System.Object)">
            <summary>
            Common method that ends the dependency operation and sends telemetry.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler">
            <summary>
            Concrete class with all processing logic to generate RDD data from the calls backs
            received from Profiler instrumentation for HTTP.   
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.#ctor(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnBeginForGetResponse(System.Object)">
            <summary>
            On begin callback for GetResponse.
            </summary>
            <param name="thisObj">This object.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnEndForGetResponse(System.Object,System.Object,System.Object)">
            <summary>
            On end callback for GetResponse.
            </summary>
            <param name="context">The context.</param>
            <param name="returnValue">The return value.</param>
            <param name="thisObj">This object.</param>
            <returns>The resulting return value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnExceptionForGetResponse(System.Object,System.Object,System.Object)">
            <summary>
            On exception callback for GetResponse callback.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception object.</param>
            <param name="thisObj">This object.</param>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnBeginForGetRequestStream(System.Object,System.Object)">
            <summary>
            On begin callback for GetRequestStream callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="transportContext">The transport context parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnExceptionForGetRequestStream(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On exception for GetRequestStream callback.
            Note: There is no call back required for GetRequestStream except on exception cases.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>
            <param name="transportContext">The transport context parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnBeginForBeginGetResponse(System.Object,System.Object,System.Object)">
            <summary>
            On begin for BeginGetResponse callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="callback">The callback parameter.</param>
            <param name="state">The state parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnEndForEndGetResponse(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On end for EndGetResponse callbacks.
            </summary>
            <param name="context">The context.</param>
            <param name="returnValue">The return value.</param>
            <param name="thisObj">This object.</param>
            <param name="asyncResult">The asyncResult parameter.</param>
            <returns>The return value passed.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnExceptionForEndGetResponse(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On exception for EndGetResponse callbacks.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>
            <param name="asyncResult">The asyncResult parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnBeginForBeginGetRequestStream(System.Object,System.Object,System.Object)">
            <summary>
            On begin for BeginGetRequestStream callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="callback">The callback parameter.</param>
            <param name="state">The state parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnExceptionForEndGetRequestStream(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On exception for EndGetRequestStream callback.
            Note: There is no call back required for EndGetRequestStream except on exception cases.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>
            <param name="asyncResult">The asyncResult parameter.</param>
            <param name="transportContext">The transportContext parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.GetResourceName(System.Object)">
            <summary>
            Gets HTTP request resource name.
            </summary>
            <param name="thisObj">Represents web request.</param>
            <returns>The resource name if possible otherwise empty string.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.GetDependencyKind">
            <summary>
            Gets Dependency Kind for Resource.
            </summary>
            <returns>The dependency kind.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnBegin(System.Object,System.Boolean)">
            <summary>
            Common helper for all Begin Callbacks.
            </summary>
            <param name="thisObj">This object.</param>        
            <param name="isAsyncCall">Indicates if the method used is async or not.</param>        
            <returns>Null object as all context is maintained in this class via weak tables.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.HttpProcessingProfiler.OnEnd(System.Object,System.Object)">
            <summary>
            Common helper for all End Callbacks.
            </summary>        
            <param name="exception">The exception object if any.</param>
            <param name="thisObj">This object.</param>                
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler">
            <summary>
            Concrete class with all processing logic to generate RDD data from the calls backs
            received from Profiler instrumentation for SQL.    
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.#ctor(Microsoft.ApplicationInsights.TelemetryClient,Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Policy.ISamplingPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBeginForExecuteReader(System.Object,System.Object,System.Object)">
            <summary>
            On begin callback for ExecuteReader.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="behavior">The callback parameter.</param>
            <param name="method">The state parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBeginForSync(System.Object)">
            <summary>
            On begin callback for sync methods except ExecuteReader.
            </summary>
            <param name="thisObj">This object.</param>        
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnEndForExecuteReader(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On end callback for ExecuteReader.
            </summary>
            <param name="context">The context.</param>
            <param name="returnValue">The return value.</param>
            <param name="thisObj">This object.</param>
            <param name="behavior">The callback parameter.</param>
            <param name="method">The state parameter.</param>
            <returns>The resulting return value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnEndForSync(System.Object,System.Object,System.Object)">
            <summary>
            On end for sync methods except ExecuteReader callback.
            </summary>
            <param name="context">The context.</param>
            <param name="returnValue">The return value.</param>
            <param name="thisObj">This object.</param>        
            <returns>The resulting return value.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnExceptionForExecuteReader(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On exception callback for ExecuteReader.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>
            <param name="behavior">The callback parameter.</param>
            <param name="method">The state parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnExceptionForSync(System.Object,System.Object,System.Object)">
            <summary>
            On end callback for sync methods except ExecuteReader.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>        
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBeginForBeginExecuteNonQueryInternal(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On begin for BeginExecuteNonQueryInternal callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="callback">The callback parameter.</param>
            <param name="stateObject">The stateObject parameter.</param>
            <param name="timeout">The timeout parameter.</param>
            <param name="asyncWrite">The asyncWrite parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBeginForBeginExecuteReaderInternal(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On begin for BeginExecuteReaderInternal callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="behavior">The behavior parameter.</param>
            <param name="callback">The callback parameter.</param>
            <param name="stateObject">The stateObject parameter.</param>
            <param name="timeout">The timeout parameter.</param>
            <param name="asyncWrite">The asyncWrite parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBeginForBeginExecuteXmlReaderInternal(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On begin for BeginExecuteXmlReaderInternal callback.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="callback">The callback parameter.</param>
            <param name="stateObject">The stateObject parameter.</param>
            <param name="timeout">The timeout parameter.</param>
            <param name="asyncWrite">The asyncWrite parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnEndForSqlAsync(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On end for all SQL async callbacks.
            </summary>
            <param name="context">The context.</param>
            <param name="returnValue">The return value.</param>
            <param name="thisObj">This object.</param>
            <param name="asyncResult">The asyncResult parameter.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnExceptionForSqlAsync(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            On exception for all SQL async callback.
            </summary>
            <param name="context">The context.</param>
            <param name="exception">The exception.</param>
            <param name="thisObj">This object.</param>
            <param name="asyncResult">The asyncResult parameter.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.GetResourceName(System.Object)">
            <summary>
            Gets SQL command resource name.
            </summary>
            <param name="thisObj">The SQL command.</param>
            <remarks>Before we have clarity with SQL team around EventSource instrumentation, providing name as a concatenation of parameters.</remarks>
            <returns>The resource name if possible otherwise empty string.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.GetDependencyKind">
            <summary>
            Gets Dependency Kind for Resource.
            </summary>
            <returns>The dependency kind.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnBegin(System.Object,System.Boolean)">
            <summary>
             Common helper for all Begin Callbacks.
            </summary>
            <param name="thisObj">This object.</param>
            <param name="isAsyncCall">Is Async Invocation.</param>
            <returns>The context for end callback.</returns>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Processing.ProfilerProcessing.SqlProcessingProfiler.OnEnd(System.Object,System.Object,System.Object,System.Boolean)">
            <summary>
             Common helper for all End Callbacks.
            </summary>
            <param name="context">The context.</param>        
            <param name="exception">The exception object if any.</param>
            <param name="thisObj">This object.</param>
            <param name="isAsync">Whether the End is for an async invocation.</param>        
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule">
            <summary>
            Remote dependency monitoring.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.Initialize(Microsoft.ApplicationInsights.Extensibility.TelemetryConfiguration)">
            <summary>
            Initialize method is called after all configuration properties have been loaded from the configuration.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.InitializeForFrameworkEventSource">
            <summary>
            Initialize for framework event source (not supported for Net40).
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.InitializeForRuntimeInstrumentationOrFramework">
            <summary>
            Initialize for runtime instrumentation or framework event source.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.SamplingRatio">
            <summary>
            Gets or sets a value indicating the sample ratio.
            The sampling ratio is the ratio of the number of expected samples over actual number of calls.
            The sampling ratio can be 1 which means sample on all calls.
            The sampling ratio can be 0.5 which means sample on every other call.
            The sampling ratio can be 1/10 which means sample on every tenth call.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.DisableRuntimeInstrumentation">
            <summary>
            Gets or sets a value indicating whether to disable runtime instrumentation.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.RemoteDependencyModule.PretendProfilerIsAttached">
            <summary>
            Gets or sets a value indicating whether pretending the profiler is attached or not.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation">
            <summary>
            Base class to support logical operations within an application. These could represent remote dependencies
            or local operations. The paradigm should be symmetric for async and sync invocations
            Start, Stop are the two main operations.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Start(System.String,System.Nullable{System.Boolean},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencyKind},System.Nullable{Microsoft.ApplicationInsights.Extensibility.Implementation.External.DependencySourceType})">
            <summary>
            Starts a DependencyOperation.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Complete">
            <summary>
            Stops a previously started DependencyOperation and marks as success.        
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Fail">
            <summary>
            Stops a previously started DependencyOperation and marks as failed.        
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Stop(System.Boolean)">
            <summary>
            Stops a previously started DependencyOperation.
            <param name="success">success flag.</param>
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Name">
            <summary>
            Gets identifying the dependency.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Duration">
            <summary>
            Gets duration for the dependency.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.DependencyKind">
            <summary>
            Gets or sets DependencyKind.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.RddSourceType">
            <summary>
            Gets or sets the RDD SourceType.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Async">
            <summary>
            Gets or sets a value indicating whether dependency operation was made asynchronously or not.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.Success">
            <summary>
            Gets or sets a value indicating whether dependency operation was successfully finished or not.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.StartTicks">
            <summary>
            Gets or sets the total elapsed time from the start of HTTP request.
            </summary>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.DependencyOperation.DependencyCallOperation.IsStarted">
            <summary>
            Gets or sets a value indicating whether start was called.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource">
            <summary>
            ETW EventSource tracing class.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Log">
            <summary>
            Instance of the RuntimeTelemetryEventSource class.
            </summary>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyModuleFailure(System.String,System.String)">
            <summary>
            Remote dependency module failed.
            </summary>
            <param name="msg">Exception message.</param>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyDisabledApmcEnabled(System.String)">
            <summary>
            Remote dependency module failed.
            </summary>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyModuleWarning(System.String,System.String)">
            <summary>
            Remote dependency module warning.
            </summary>
            <param name="msg">Error message.</param>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyModuleVerbose(System.String,System.String)">
            <summary>
            Remote dependency module verbose.
            </summary>
            <param name="msg">Verbose message.</param>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyModuleInformation(System.String,System.String)">
            <summary>
            Remote dependency module information.
            </summary>
            <param name="msg">Information message.</param>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="M:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.RemoteDependencyModuleProfilerNotAttached(System.String)">
            <summary>
            Remote dependency module profiler is not attached.
            </summary>
            <param name="appDomainName">Parameter is not used. Added to comply EventSource rules.</param>
        </member>
        <member name="P:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.IsVerboseLoggingEnabled">
            <summary>
            Gets a value indicating whether verbose logging is enabled.
            </summary>
        </member>
        <member name="T:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Keywords">
            <summary>
            Keywords for the RuntimeTelemetryEventSource.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Keywords.UserActionable">
            <summary>
            Key word for user actionable events.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Keywords.Diagnostics">
            <summary>
            Diagnostics tracing keyword.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Keywords.VerboseFailure">
            <summary>
            Keyword for errors that trace at Verbose level.
            </summary>
        </member>
        <member name="F:Microsoft.ApplicationInsights.Extensibility.RuntimeTelemetry.Tracing.RuntimeTelemetryEventSource.Keywords.RddEventKeywords">
            <summary>
            Key word for resource discovery module failures.
            </summary>
        </member>
    </members>
</doc>
